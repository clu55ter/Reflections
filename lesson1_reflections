Q. How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

Q. What do you think are the pros and cons of manually choosing
when to create a commit, like you do in Git, vs having versions
automatically saved, like Google docs does?

Reflect: Multi-File Commits

Why do you think some version control systems, like Git,
allow saving multiple files in one commit, while others, like Google
Docs, treat each file separately?

Q. How can you use the commands git log and git diff to view the history of files?
a1. Use git log to view all commits

a2. use git diff to compare changes to commits

Git Errors and Warnings Solution

Should not be doing an octopus

Octopus is a strategy Git uses to combine many different versions of
code together. This message can appear if you try to use this strategy
in an inappropriate situation.


You are in 'detached HEAD' state

HEAD is what Git calls the commit you are currently on. You can
“detach” the HEAD by switching to a previous commit, which we’ll see in
the next video. Despite what it sounds like, it’s actually not a bad
thing to detach the HEAD. Git just warns you so that you’ll realize
you’re doing it.


Panic! (the 'impossible' happened)

This is a real error message, but it’s not output by Git. Instead it’s
output by GHC, the compiler for a programming language called Haskell.
It’s reserved for particularly surprising errors!

git checkout (commit id) to restore a commit

Q. How might using version control make you more confident to make changes that could break something?

Q. Now that you have your workspace set up, what do you want to try using Git for?
